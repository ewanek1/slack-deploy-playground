# Execute command
name: GCli project wip script 

on:
  workflow_dispatch:
    inputs:
      command:
        description: 'CLI command to run'
        required: true

jobs:
  deploy:
    name: "General using CLI"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [16, 18, 20, 22, 24]
    env: 
      SLACK_CLI_VERSION: "3.5.2"
    #timeout-minutes: 5

    defaults:
      run:
        shell: bash

    steps:
      # Checkout the repository to the GitHub Actions runner
      - name: Checkout
        uses: actions/checkout@v4

      #- name: Install Slack CLI
      #  uses: ./.github/actions/deploy-slack-app
      - name: Cache Slack CLI
        uses: actions/cache@v4
        with:
          path: ~/.slack/bin
          key: slack-cli-${{ runner.os }}-${{ runner.arch }}-${{ env.SLACK_CLI_VERSION }}  
          
      - name: Add Slack CLI to PATH (Linux/macOS)
        if: runner.os != 'Windows'
        shell: bash
        run: echo "$HOME/.slack/bin" >> "$GITHUB_PATH"

      - name: Install Slack CLI (Linux/macOS)
        if:
          steps.cache-cli.outputs.cache-hit != 'true' && (runner.os == 'Linux' || runner.os == 'macOS')
        shell: bash
        run:
          curl -fsSL https://downloads.slack-edge.com/slack-cli/install.sh | bash -s -- -v $SLACK_CLI_VERSION

      - name: Install Slack CLI (Windows)
      # steps.cache-cli.outputs.cache-hit != 'true' &&
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $ExecutionContext.SessionState.LanguageMode = "FullLanguage"
          Write-Host "PowerShell Language Mode set to $($ExecutionContext.SessionState.LanguageMode)" 
          irm https://downloads.slack-edge.com/slack-cli/install-windows.ps1 | iex

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm install shell-quote

      - name: Execute command via script
        run: | 
          echo "Running command: ${{ github.event.inputs.command }}"
          node parse-command.js ${{ github.event.inputs.command }}
        env:
          # Get service token by running `slack auth token`
          SLACK_SERVICE_TOKEN: ${{ secrets.SLACK_SERVICE_TOKEN }} 
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
        
  health-score:
    name: "Report Health Score"
    needs: deploy
    runs-on: ubuntu-latest
    permissions:
      checks: write
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Report health score
        uses: slackapi/slack-health-score@v0
        with:
          codecov_token: ${{ secrets.CODECOV_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          extension: ts
          include: src
