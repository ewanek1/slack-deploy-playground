name: Slack CLI Debug Runner
description: Run Slack CLI commands with full debug info (for testing only)

inputs:
  command:
    description: "Slack CLI command to run"
    required: true
  cli_version:
    description: "Slack CLI Version"
    required: false
    default: '3.6.0'

outputs:
  success:
    description: "Whether the command ran successfully"
    value: ${{ steps.run-slack-cli-command.outputs.success }}
  stdout:
    description: "Output from command executed"
    value: ${{ steps.run-slack-cli-command.outputs.stdout }}
  exit_code:
    description: "Exit code of the command"
    value: ${{ steps.run-slack-cli-command.outputs.exit_code }}
  command_executed:
    description: "The exact command executed"
    value: ${{ steps.run-slack-cli-command.outputs.command_executed }}

runs:
  using: composite
  steps:
    - name: Install Slack CLI
      shell: bash
      run: |
        curl -fsSL https://downloads.slack-edge.com/slack-cli/install.sh | bash -s -- -v ${{ inputs.cli_version }} --skip-update

    - name: Add Slack CLI to PATH
      shell: bash
      run: echo "$HOME/.slack/bin" >> "$GITHUB_PATH"

    - name: Run Slack CLI Command (with capture)
      id: run-slack-cli-command
      shell: bash
      run: |
        # Capture command output and exit code
        output=$(slack ${{ inputs.command }} --skip-update 2>&1)
        exit_code=$?  
        
        # Set outputs using proper GitHub Actions syntax
        echo "success=$([ $exit_code -eq 0 ] && echo 'true' || echo 'false')" >> $GITHUB_OUTPUT
        echo "exit_code=$exit_code" >> $GITHUB_OUTPUT 
        echo "command_executed=slack ${{ inputs.command }} --skip-update" >> $GITHUB_OUTPUT
        
        # Handle multi-line output properly
        echo "stdout<<EOF" >> $GITHUB_OUTPUT
        echo "$output" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT